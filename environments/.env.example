# LOCAL DEVELOPMENT & DEBUGGING
NODE_ENV="development"
# DEBUG_MODE=false
USE_SSL=false

##################
### PRODUCTION ###
##################

# LOGS
SAVE_LOGS=true
LOGS_PATH="./logs"
DEBUG_LEVEL="debug"
MAX_FILE_SIZE="100m"
# Valid units: "k: kiloBytes" || "m: megaByte" || "g: gigaBytes"
DELETE_LOGS_AFTER_X_DAYS=0

# Relational DB
RDB_TYPE=postgres
RDB_HOST=localhost
RDB_PORT=5432
RDB_NAME=db_name
RDB_USER=user
RDB_PASSWORD=password

# HTTP
HTTP_PORT=3000
CORS_ALLOWED_ORIGIN=^https:\/\/(?:www\.)?example\.com$|^https:\/\/(?:[^.]+\.)*example\.com$
CORS_ALLOWED_METHODS="GET,POST,PUT,DELETE,OPTIONS"
CORS_ALLOWED_HEADERS="Origin,X-Requested-With,Content-Type,Accept,Authorization,Access-Control-Allow-Credentials"

# gRPC
# GRPC_HOST="localhost"
GRPC_HOST=0.0.0.0 # ? This allows the server to listen on all interfaces which is necessary for Docker to expose the gRPC service correctly (and doesn't suppose a security risk because of the Docker network isolation)
GRPC_PORT=50051
# GRPC_CERT_PATH="./certs/server.crt"
# GRPC_KEY_PATH="./certs/server.key"

# Kafka
KAFKA_BROKERS="kafka:9092"
KAFKA_GROUP_ID="orders"
